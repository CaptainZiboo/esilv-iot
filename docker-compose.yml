version: '3'

services:
  reverse-proxy:
    image: traefik:latest
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default-bridge

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: password
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 5
    user: "472:472"
    volumes:
      - ./data/grafana:/var/lib/grafana
    networks:
      - default-bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  mysql:
    image: mysql:latest
    restart: always
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: grafana
      MYSQL_USER: grafana
      MYSQL_PASSWORD: password
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - default-bridge

  emqx:
    image: emqx:latest
    restart: always
    environment:
      EMQX_NAME: emqx
      EMQX_HOST: 127.0.0.1
    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083 
    volumes:
      - vol-emqx-data:/opt/emqx/data
      - vol-emqx-etc:/opt/emqx/etc
      - vol-emqx-log:/opt/emqx/log
    networks:
      - default-bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/emqx`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  nodered:
    image: nodered/node-red:latest
    restart: always
    ports:
      - "3002:1880"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:1880/"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./data/nodered:/data
    networks:
      - default-bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/nodered`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
  mqttx:
    image: emqx/mqttx-web:latest
    restart: always
    ports:
      - "3001:80"
    networks:
      - default-bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/mqttx`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
  
networks:
  default-bridge:
    driver: bridge
  emqx-bridge:
    driver: bridge

volumes:
  vol-emqx-data:
    name: foo-emqx-data
  vol-emqx-etc:
    name: foo-emqx-etc
  vol-emqx-log: